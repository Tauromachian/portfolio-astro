---

---

<div class="flex w-full" id="zdog-container">
  <canvas id="zdog" class="my-auto md:cursor-move"></canvas>
</div>

<script>
  import Zdog from "zdog";
  import debounce from "basic-debouncer";

  const zdogContainer = document.getElementById("zdog-container");
  let illo;

  const zdogRender = () => {
    const illoElem = document.getElementById("zdog");

    let illoSize = 64;
    let minWindowSize = Math.min(zdogContainer.offsetWidth, window.innerHeight);
    let zoom = Math.floor(minWindowSize / illoSize);
    illoElem.setAttribute("width", `${illoSize * zoom}`);
    illoElem.setAttribute("height", `${illoSize * zoom}`);

    console.log(zdogContainer.offsetWidth);

    let isSpinning = true;
    let TAU = Zdog.TAU;

    illo = new Zdog.Illustration({
      element: illoElem,
      zoom: zoom,
      dragRotate: zdogContainer.offsetWidth > 600,
      onDragStart: function () {
        isSpinning = false;
      },
    });

    const coordinates = [
      { x: 9, y: 0, z: 0 },
      { x: 0, y: 9, z: 0 },
      { x: 0, y: 0, z: 9 },
      { x: 9, y: 9, z: 0 },
      { x: 0, y: 9, z: 9 },
      { x: 9, y: 0, z: 9 },
      { x: 9, y: 9, z: 9 },
      { x: 9, y: 9, z: 9 },

      { x: -9, y: 0, z: 0 },
      { x: 0, y: -9, z: 0 },
      { x: 0, y: 0, z: -9 },
      { x: -9, y: -9, z: 0 },
      { x: 0, y: -9, z: -9 },
      { x: -9, y: 0, z: -9 },
      { x: -9, y: -9, z: -9 },

      { x: 9, y: -9, z: 0 },
      { x: 9, y: 0, z: -9 },
      { x: 9, y: -9, z: -9 },
      { x: -9, y: 9, z: 0 },
      { x: -9, y: 9, z: -9 },
      { x: 0, y: 9, z: -9 },
      { x: -9, y: 0, z: 9 },
      { x: -9, y: -9, z: 9 },
      { x: 9, y: 9, z: -9 },
      { x: 9, y: -9, z: 9 },
      { x: -9, y: 9, z: 9 },
      { x: 0, y: -9, z: 9 },
    ];

    // colors
    let color1 = "#33bebc";
    let color2 = "#cc925c";
    let color3 = "#D972FF";
    let color4 = "#111827";
    let color5 = "#19297C";
    let color6 = "#AB3428";

    let anchor = new Zdog.Anchor({
      addTo: illo,
      rotate: { x: -4, y: 10 },
    });
    // ----- model ----- //

    // top & bottom
    var cube = new Zdog.Box({
      addTo: anchor,
      width: 8,
      height: 8,
      depth: 8,
      translate: { x: 0, y: 0, z: 0 },
      topFace: color1,
      frontFace: color2,
      leftFace: color3,
      rightFace: color4,
      rearFace: color5,
      bottomFace: color6,
      stroke: false,
    });
    coordinates.forEach((coordinate) => {
      cube.copy({
        translate: coordinate,
      });
    });

    // -- animate --- //
    let keyframes = [
      { x: TAU * 0, y: TAU * 0 },
      { x: (TAU * 1) / 2, y: (TAU * -1) / 2 },
      { x: TAU * 1, y: TAU * -1 },
    ];

    let ticker = 0;
    let cycleCount = 180;

    function animate() {
      spin();
      illo.updateRenderGraph();
      requestAnimationFrame(animate);
    }

    animate();

    // -- update -- //

    function spin() {
      if (!isSpinning) {
        return;
      }
      let progress = ticker / cycleCount;
      let tween = Zdog.easeInOut(progress % 1, 3);
      let turnLimit = keyframes.length - 1;
      let turn = Math.floor(progress % turnLimit);
      let keyA = keyframes[turn];
      let keyB = keyframes[turn + 1];
      let thetaX = Zdog.lerp(keyA.x, keyB.x, tween);
      illo.rotate.x = (Math.cos(thetaX) * TAU) / 12;
      illo.rotate.y = Zdog.lerp(keyA.y, keyB.y, tween);
      ticker++;
    }
  };

  function replaceWithClone() {
    const original = document.querySelector("#zdog");

    const newCanvas = document.createElement("canvas");

    newCanvas.id = "zdog";
    newCanvas.classList.add("my-auto", "md:cursor-move");

    original.parentNode.replaceChild(newCanvas, original);
  }

  window.addEventListener("resize", () => {
    debounce(() => {
      replaceWithClone();
      zdogRender();
    }, 10);
  });

  zdogRender();
</script>

<style lang="scss" scoped></style>
