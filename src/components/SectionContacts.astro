---
import AppAlert from "./AppAlert.vue";
import BaseButton from "./BaseButton.vue";
import BaseAreaText from "./BaseAreaText.vue";
import BaseInputText from "./BaseInputText.vue";
import BaseCard from "./BaseCard.vue";
import BaseSection from "./BaseSection.astro";
import SocialIconsBase from "./SocialIconsBase.vue";

import { getLangFromUrl, useTranslations } from "../i18n/utils";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const socialLinks = [
  {
    link: "https://www.linkedin.com/in/dev-jose-garcia",
    icon: "mdiLinkedin",
    alt: "Linkedin icon",
  },
  {
    link: "https://t.me/BetanKore",
    icon: "telegram",
    alt: "Telegram icon",
  },
  {
    link: "https://www.reddit.com/user/BetanKore",
    icon: "mdiReddit",
    alt: "Reddit icon",
  },
];
---

<BaseSection
  classes="items-center justify-center"
  title={t("contacts")}
  title-alignment="self-center"
  id="contacts"
>
  <div class="flex flex-wrap gap-4 justify-center text-7xl md:text-8xl">
    {
      socialLinks.map((link) => (
        <a title={link.alt} href={link.link} class="transition scale-110">
          <div style="height: 80px; width: 80px" class="color-primary">
            <SocialIconsBase
              color=""
              height="80px"
              width="80px"
              icon={link.icon}
            />
          </div>
        </a>
      ))
    }
  </div>
  <BaseCard class="mt-8 p-4 card mx-auto">
    <h3 class="text-base sm:text-2xl font-bold">
      {t("formTitle")}
    </h3>
    <div id="message-wrapper" class="mt-3">
      <AppAlert client:visible />
    </div>

    <form id="contact-form">
      <BaseInputText label={t("form.name")} class="mt-3" required name="name" />
      <BaseInputText
        label={t("form.email")}
        class="mt-3"
        type="email"
        required
        name="email"
      />
      <BaseAreaText
        label={t("form.message")}
        required
        class="mt-3"
        name="message"
      />

      <span class="flex w-full">
        <BaseButton
          client:visible
          class="mt-5 ml-auto"
          :loading="state.loading"
          prepend-icon="mdiEmailArrowRight"
          type="submit"
        >
          {t("button.send")}
        </BaseButton>
      </span>
    </form>
  </BaseCard>
</BaseSection>

<script>
  import { message, loading } from "@/stores/formStore";

  const form = document.getElementById("contact-form");
  const messageWrapper = document.getElementById("message-wrapper");

  form.addEventListener("submit", (event) => {
    submitForm();
    event.preventDefault();
  });

  const submitForm = async () => {
    loading.set(true);

    const formData = new FormData(document.forms[0]);
    const formValues = Object.fromEntries(formData);

    const body = {
      ...formValues,
      from: formValues.email,
      subject: "Work email",
      body: `Name: ${formValues.name}\nMessage: ${formValues.message}\nFrom:${formValues.email}`,
      addresses: import.meta.env.PUBLIC_TARGET_EMAIL,
    };

    let response = null;

    try {
      response = await fetch(
        `${import.meta.env.PUBLIC_SERVICE_MAILER_URL}send-email`,
        {
          method: "POST",
          body: JSON.stringify(body),
          headers: {
            "Content-Type": "application/json",
          },
        },
      );
    } catch (error) {
      displayErrorMessage();
      return;
    }

    if (response.error) {
      displayErrorMessage();
      return;
    }

    displaySuccessMessage();
    loading.set(false);
  };

  const displaySuccessMessage = () => {
    message.setKey("text", "Success! email sent correctly");
    message.setKey("success", true);
    message.setKey("active", true);
    messageWrapper.style.display = "block";
  };

  const displayErrorMessage = () => {
    message.setKey("text", "Error there was a problem sending the email");
    message.setKey("success", false);
    message.setKey("active", true);
    messageWrapper.style.display = "block";
  };
</script>

<style>
  .card {
    background: var(--bg-card);
  }

  #message-wrapper {
    display: none;
  }
</style>
